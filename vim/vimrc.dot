"	1. Place file in home directory as .vimrc
"	2. Run the following command in terminal
"		mkdir .vim .vim/bundle .vim/backup .vim/swap .vim/cache .vim/undo; git clone https://github.com/gmarik/vundle.git .vim/bundle/vundle
"	3. Launch Vim and Run
"		:BundleInstall
"	5. Restart Vim
set nocompatible
filetype off

if has("win32")
    " We're on Windows.
    let g:vim_home_path = "~/vimfiles"
else
    " We're on some POSIX system, hopefully.
    let g:vim_home_path = "~/.vim"
endif

execute "set rtp+=" . g:vim_home_path . "/bundle/vundle/"
let g:vundle_default_git_proto = 'https'
call vundle#rc(g:vim_home_path. "/bundle")

Bundle 'gmarik/vundle'

" Language plugins
Bundle "bryanjswift/vim-rust"
Bundle "empanda/vim-varnish"
Bundle "groenewege/vim-less"
Bundle "Glench/Vim-Jinja2-Syntax"
Bundle 'jnwhiteh/vim-golang'
Bundle "kchmck/vim-coffee-script"
Bundle "PProvost/vim-ps1"
Bundle "rodjek/vim-puppet"
Bundle "tpope/vim-markdown"
Bundle "vim-scripts/VimClojure"

" Other plugins
Bundle "godlygeek/tabular"
Bundle "kien/ctrlp.vim"
Bundle "Lokaltog/vim-easymotion"
Bundle "Lokaltog/vim-powerline"
Bundle "mileszs/ack.vim"
Bundle "scrooloose/syntastic"
Bundle "tpope/vim-eunuch"
Bundle "tpope/vim-fugitive"
Bundle "msanders/snipmate.vim"
Bundle "mhinz/vim-startify"

" ruby blocks
Bundle "tsaleh/vim-matchit"
Bundle "kana/vim-textobj-user"
Bundle "nelstrom/vim-textobj-rubyblock"

" tagbar
Bundle "majutsushi/tagbar"

" Personal bundles
Bundle 'mitchellh/vim-misc'

" solarized
Bundle "altercation/vim-colors-solarized"

" NERDTree
Bundle "scrooloose/nerdtree"

Bundle "kevinw/pyflakes-vim"

" RSpec
Bundle 'thoughtbot/vim-rspec'
Bundle 'jgdavey/tslime.vim'
Bundle 'tpope/vim-dispatch'



" Turn on filetype plugin and indent loading so that loading the
" vim-misc stuff below loads the proper files.
filetype plugin indent on

" Load in my custom vimrc if it exists
if filereadable(expand(g:vim_home_path . "/bundle/vim-misc/vimrc.vim"))
    execute "source " . g:vim_home_path . "/bundle/vim-misc/vimrc.vim"
endif

set t_Co=256
" solarized options
set background=dark
let g:solarized_termcolors = 256
"let g:solarized_visibility = "high"
"let g:solarized_contrast = "high"
colorscheme solarized
"colorscheme molokai

map <C-K> :nohlsearch<CR>
map <C-N><C-N> :set invnumber<CR>

" remember previous cursos position
if has("autocmd")
    filetype plugin indent on
    autocmd BufReadPost *
        \ if line("'\"") > 0 && line("'\"") <= line("$") |
        \   exe "normal g`\"" |
        \ endif
endif " has("autocmd")

" change the mapleader from \ to ,
let mapleader=","

" RSpec.vim mappings
"let g:rspec_command = 'call Send_to_Tmux("rspec {spec}\n")'
let g:rspec_command = "Dispatch rspec {spec}"

map <Leader>t :call RunCurrentSpecFile()<CR>
map <Leader>s :call RunNearestSpec()<CR>
map <Leader>l :call RunLastSpec()<CR>
map <Leader>a :call RunAllSpecs()<CR>

" Quickly edit/reload the vimrc file
nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR>

" NERDTree
nmap <silent> <leader>p :NERDTreeToggle<CR>
nmap <silent> <leader>q :NERDTreeClose<CR>

" tagbar
nmap <silent> <leader>l :TagbarToggle<CR>

" Close vim when only oppened window is NERDTree.
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
let g:NERDTreeWinPos = "right"
let g:tagbar_ctags_bin = "/usr/local/Cellar/ctags/5.8/bin/ctags"
"set guifont=Monaco:h13

"set relativenumber


" Startify
let g:startify_list_order = ['bookmarks', 'files', 'sessions']
let g:startify_bookmarks = [
    \ '~/Devel/python/blip',
    \ ]
let g:startify_custom_header = [
    \ '                              _            _  ',
    \ '                             | |          | | ',
    \ '                  _____ _   _| | _____  __| | ',
    \ '                 (___  ) | | | |(____ |/ _  | ',
    \ '                  / __/| |_| | |/ ___ ( (_| | ',
    \ '                 (_____)\__  |\_)_____|\____| ',
    \ '                       (____/ ',
    \ '      ======================================================',
    \ '',
    \ ]

